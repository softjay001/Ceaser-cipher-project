def caesar_cipher_encrypt(plaintext, key):
    encrypted_text = ""
    
    for char in plaintext:
        if char.isupper():
            encrypted_text += chr((ord(char) + key - 65) % 26 + 65)
        elif char.islower():
            encrypted_text += chr((ord(char) + key - 97) % 26 + 97)
        else:
            encrypted_text += char
            
    return encrypted_text

def caesar_cipher_decrypt(encrypted_text, key):
    decrypted_text = ""
    
    for char in encrypted_text:
        if char.isupper():
            decrypted_text += chr((ord(char) - key - 65) % 26 + 65)
        elif char.islower():
            decrypted_text += chr((ord(char) - key - 97) % 26 + 97)
        else:
            decrypted_text += char
            
    return decrypted_text

def main():
    # Ask the user if they want to encrypt or decrypt
    action = input("Would you like to (E)ncrypt or (D)ecrypt? ").strip().upper()
    
    if action not in ['E', 'D']:
        print("Invalid option! Please enter 'E' for encrypt or 'D' for decrypt.")
        return
    
    # Request the key from the user
    key = int(input("Enter the key (0-25): "))
    
    # Ensure the key is within the valid range
    if key < 0 or key > 25:
        print("Invalid key! Please enter a number between 0 and 25.")
        return
    
    if action == 'E':
        # Request the plaintext from the user
        plaintext = input("Enter the plaintext: ")
        
        # Encrypt the plaintext using the Caesar cipher
        encrypted_text = caesar_cipher_encrypt(plaintext, key)
        
        # Display the encrypted text
        print("Encrypted text:", encrypted_text)
    
    elif action == 'D':
        # Request the encrypted text from the user
        encrypted_text = input("Enter the encrypted text: ")
        
        # Decrypt the encrypted text using the Caesar cipher
        decrypted_text = caesar_cipher_decrypt(encrypted_text, key)
        
        # Display the decrypted text
        print("Decrypted text:", decrypted_text)

if __name__ == "__main__":
    main()
